// Generated by CoffeeScript 1.10.0
var cloud;

cloud = (function() {
  function cloud($cloud) {
    this.$cloud = $cloud;
    console.log('clouad ' + this.$cloud.html());
    this.setOptions();
    if (this.$cloud) {
      this.bindEvents();
    }
  }

  cloud.prototype.setOptions = function() {
    this.$renameinput = $('#renameinput');
    this.$folder = this.$cloud.find('.folder-trigger');
    this.$imgli = this.$cloud.find('li');
    this.$listimg = this.$cloud.find('.listimg');
    this.$timer = void 0;
    return this.$needsorting = this.$cloud.attr('id') === 'cloud';
  };

  cloud.prototype.checkmovment = function() {
    var _that, newcloud;
    newcloud = this.$cloud.html();
    $('.cover').addClass('visible');
    _that = this;
    return $(newcloud).find('.listimg').each(function() {
      var idlist;
      idlist = $(this).attr('id');
      return $(this).find(' > li').each(function() {
        var newpath, oldpath;
        if (idlist !== $(this).data('from-where')) {
          console.log(idlist + ' -- ' + $(this).data('from-where') + ' -- ' + $(this).data('name'));
          oldpath = $('#' + $(this).data('from-where')).data('path') + $(this).data('name');
          newpath = $('#' + idlist).data('path') + $(this).data('name');
          _that.updateorder(oldpath, newpath);
        }
      });
    });
  };

  cloud.prototype.updateorder = function($oldpath, $newpath) {
    this.$oldpath = $oldpath;
    this.$newpath = $newpath;
    console.log(this.$oldpath + ' @$oldpath, ' + this.$newpath + '+@$newpath');
    return $.ajax({
      type: 'POST',
      url: 'php/move.php',
      data: {
        'newname': this.$newpath,
        'oldname': this.$oldpath
      }
    }).done(function(data) {
      $('.cover').removeClass('visible');
      return console.log('done' + data);
    });
  };

  cloud.prototype.checkmovmentdebounce = function() {
    var _that;
    clearTimeout(this.$timer);
    _that = this;
    this.$timer = setTimeout((function() {
      return _that.checkmovment();
    }), 1000);
  };

  cloud.prototype.updateSelect = function($el) {
    var allowed, path;
    $('.previewfile').empty();
    $('#cloud').removeClass('withpreview');
    $('.selected_folder').removeClass('selected_folder');
    $el.addClass('selected_folder');
    path = $el.is('li') ? 'path-file' : 'path';
    $('.showurl').text(window.location.origin + '/' + $('.selected_folder').data(path));
    allowed = 'image/*';
    if ($el.data('type') === 'img') {
      allowed = 'image/*';
    }
    if ($el.data('type') === 'pdf') {
      allowed = 'application/pdf';
    }
    if ($el.data('type') === 'mp3') {
      allowed = 'audio/*';
    }
    if ($el.data('type') === 'video') {
      allowed = 'video/*';
    }
    $('#filesToUpload').attr('accept', allowed);
    $('#filesToUpload').attr('data-type', $el.data('type'));
  };

  cloud.prototype.updatebind = function($el) {
    var _that;
    _that = this;
    return $el.on('click', function(event) {
      _that.updateSelect($(this));
      if ($(this).data('type') === 'img') {
        $('.previewfile').append('<img src="' + $(this).data('path-file') + '" />');
        $('#cloud').addClass('withpreview');
      }
      if ($(this).data('type') === 'mp3') {
        $('.previewfile').append('<audio controls><source src="' + $(this).data('path-file') + '" type="audio/mpeg"></audio>');
        $('#cloud').addClass('withpreview');
      }
      if ($(this).data('type') === 'video') {
        $('.previewfile').append('<video width="300" controls><source src="' + $(this).data('path-file') + '" type="video/mp4"></video>');
        return $('#cloud').addClass('withpreview');
      }
    });
  };

  cloud.prototype.bindEvents = function() {
    var _that;
    console.log('bindEvents clouad' + this.$imgli.length);
    _that = this;
    this.updateSelect($('.folder:first-child'));
    if (this.$needsorting) {
      this.$listimg.sortable({
        items: ':not(.notsortable)',
        connectWith: '.listimg'
      }).bind('sortupdate', function(e) {
        return _that.checkmovmentdebounce();
      });
    }
    this.$imgli.on('click', function(event) {
      _that.updateSelect($(this));
      _that.$cloud.removeClass('withpreview');
      if ($(this).data('type') === 'img') {
        $('.previewfile').append('<img src="' + $(this).data('path-file') + '" />');
        _that.$cloud.addClass('withpreview');
      }
      if ($(this).data('type') === 'mp3') {
        $('.previewfile').append('<audio controls><source src="' + $(this).data('path-file') + '" type="audio/mpeg"></audio>');
        _that.$cloud.addClass('withpreview');
      }
      if ($(this).data('type') === 'video') {
        $('.previewfile').append('<video width="300" controls><source src="' + $(this).data('path-file') + '" type="video/mp4"></video>');
        return _that.$cloud.addClass('withpreview');
      }
    });
    return this.$folder.on('change', function(event) {
      return _that.updateSelect($(this).parent());
    });
  };

  return cloud;

})();

module.cloud = cloud;
