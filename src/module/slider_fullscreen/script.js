// Generated by CoffeeScript 1.10.0
var moveContainerTop, sliderfullscreen, slidernormal,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

moveContainerTop = function($container, top) {
  var transform3dEnabled, transformEnabled;
  transform3dEnabled = $('html').hasClass('csstransforms3d');
  transformEnabled = $('html').hasClass('csstransforms');
  if (transform3dEnabled) {
    return $container.css({
      'transform': 'translate3d(0, ' + top + 'px, 0)'
    });
  } else if (transformEnabled) {
    return $container.css({
      'transform': 'translateY(' + top + 'px)'
    });
  } else {
    return $container.css({
      'top': top + 'px'
    });
  }
};

sliderfullscreen = (function() {
  function sliderfullscreen($container1) {
    this.$container = $container1;
    this.init = bind(this.init, this);
    this.setOptions();
    this.bindEvents();
    this.insertspan();
  }

  sliderfullscreen.prototype.init = function() {
    this.resizeWindow();
    return this.$flexslider.flexslider({
      animation: 'slide',
      animationSpeed: 400,
      smoothHeight: false,
      slideshow: false,
      start: (function(_this) {
        return function() {
          return _this.sliderReady();
        };
      })(this),
      after: (function(_this) {
        return function() {
          _this.setSliderOptions();
          _this.resizeWindow();
          return _this.startVideo();
        };
      })(this)
    });
  };

  sliderfullscreen.prototype.setOptions = function() {
    this.elementOffset = 0;
    this.elementHeight = 0;
    this.elementOffsetOrigin = this.$container.offset().top;
    this.$flexslider = this.$container.find('.flexslider');
    this.$flexslide = this.$flexslider.find('li');
    this.$containermedia = this.$flexslider.find('.container-media');
    this.$media = this.$containermedia.find('.media');
    return this.setSliderOptions();
  };

  sliderfullscreen.prototype.setSliderOptions = function() {
    this.$activeSlider = this.$flexslider.find('.flex-active-slide');
    this.$background_holder = this.$activeSlider.find('.media');
    this.$foreground_holder = this.$activeSlider.find('.container');
    return this.$embedVideo = this.$activeSlider.find('.video');
  };

  sliderfullscreen.prototype.insertspan = function() {
    this.$caption = this.$flexslider.find('.flex-caption');
    return this.$caption.find('p').each(function() {
      $(this).html('<span>' + $(this).html() + '</span>');
    });
  };

  sliderfullscreen.prototype.sliderReady = function() {
    this.setSliderOptions();
    this.resizeWindow();
    return this.doParallax();
  };

  sliderfullscreen.prototype.stopvideo = function() {
    this.$StopVideo = this.$flexslider.find('.video');
    if (this.$StopVideo.length) {
      return this.$StopVideo.find('.iframe').empty();
    }
  };

  sliderfullscreen.prototype.startVideo = function() {
    this.stopvideo();
    if (this.$embedVideo.length) {
      return this.$embedVideo.find('.iframe').html(this.$embedVideo.find('.iframe').attr('data-html'));
    }
  };

  sliderfullscreen.prototype.bindEvents = function() {
    this.init();
    return $(window).on('scroll touchmove', (function(_this) {
      return function() {
        return _this.doParallax();
      };
    })(this)).on('resize', (function(_this) {
      return function() {
        _this.resizeWindow();
        return _this.doParallax();
      };
    })(this));
  };

  sliderfullscreen.prototype.doParallax = function() {
    var overscroll, percentScrolled, percentScrolledText, posChangeBackground, posChangeContent;
    this.scrollTop = $(window).scrollTop();
    overscroll = this.scrollTop;
    percentScrolled = (this.elementOffset + this.elementHeight) / this.scrollTop;
    percentScrolled = percentScrolled - .95;
    percentScrolledText = percentScrolled - .6;
    posChangeBackground = overscroll * .15;
    posChangeContent = overscroll * .17;
    moveContainerTop(this.$background_holder, posChangeBackground);
    return moveContainerTop(this.$foreground_holder, posChangeContent);
  };

  sliderfullscreen.prototype.resizeWindow = function() {
    var newHeight, newRatio;
    console.log('resize');
    newHeight = $(window).innerHeight() - this.elementOffsetOrigin;
    newRatio = this.$container.innerWidth() / this.$container.innerHeight();
    this.$container.height(newHeight);
    this.$flexslider.height(newHeight);
    this.$flexslide.height(newHeight);
    this.$containermedia.css('height', newHeight);
    return this.$media.height(newHeight);
  };

  return sliderfullscreen;

})();

module.sliderfullscreen = sliderfullscreen;

slidernormal = (function() {
  function slidernormal($container1) {
    this.$container = $container1;
    this.init = bind(this.init, this);
    this.setOptions();
    this.init();
  }

  slidernormal.prototype.init = function() {
    return this.$flexslider.flexslider({
      animation: 'slide',
      animationSpeed: 400,
      smoothHeight: true,
      slideshow: false,
      after: (function(_this) {
        return function() {
          return _this.replacelowres();
        };
      })(this)
    });
  };

  slidernormal.prototype.setOptions = function() {
    this.$flexslider = this.$container.find('.flexslider');
    return this.$flexslide = this.$flexslider.find('li');
  };

  slidernormal.prototype.replacelowres = function() {
    var filereplaced, newsrc;
    this.$activeSlider = this.$flexslider.find('.flex-active-slide');
    this.$flexslideimg = this.$activeSlider.find('img');
    filereplaced = this.$flexslideimg.data('file-replaced');
    console.log('filereplaced : ' + filereplaced);
    if (filereplaced !== 'done') {
      newsrc = this.$flexslideimg.data('file-path');
      this.$flexslideimg.attr('src', newsrc);
      this.$flexslideimg.data('file-replaced', 'done');
      return console.log('changed to hd');
    }
  };

  return slidernormal;

})();

module.slidernormal = slidernormal;
