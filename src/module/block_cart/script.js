// Generated by CoffeeScript 1.10.0
var cart;

cart = (function() {
  function cart($container1) {
    this.$container = $container1;
    console.log('updatecart : ');
    this.quantity = this.$container.find('.quantity');
    this.addressform = this.$container.find('#formaddress');
    this.addressinput = this.$container.find('#formaddress input');
    this.etape1 = this.$container.find('.btnetape1');
    this.etape2 = this.$container.find('.btnetape2');
    this.bindEvents();
    this.updatebtnpaypal(this.$container);
  }

  cart.prototype.updatecart = function($container) {
    var $article, $postal, $price, $topay, $total;
    console.log('updatecart : ');
    $article = $container.find('.article');
    $total = $container.find('.total .value');
    $postal = parseInt($container.find('.postal .value').text());
    $topay = $container.find('.topay .value');
    $price = 0;
    $article.each(function() {
      return $price += parseInt($(this).find('.subtotal').text());
    });
    $total.text($price);
    return $topay.text($postal + $price);
  };

  cart.prototype.updatebtnpaypal = function($container) {
    var $amount, $article, $cart, $id, $shipping, $total, $total_price, $total_price_all_items, _form;
    _form = $('#formpaypal');
    _form.find('.amount, .quantity, .item, .shipping').remove();
    $article = $container.find('.article');
    $id = 0;
    $total_price = 0;
    $cart = [];
    Cookies.remove('cart');
    $article.each(function(index) {
      var $amount, $amt, $descrition, $idref, $image, $name, $nb, $newelement, $quantity, $ship, $shipping, $title;
      $title = $(this).find('.title').text();
      $amt = parseInt($(this).find('.cost').text());
      $nb = parseInt($(this).find('.quantity').val());
      $idref = parseInt($(this).find('.id').val());
      $ship = parseInt($(this).find('.postal .value').text());
      $image = $(this).find('.image').val();
      $descrition = $(this).find('.descrition').text();
      $total_price += $amt * $nb;
      $newelement = {
        id: $idref,
        title: $title,
        cost: $amt,
        postal: $ship,
        quantity: $nb,
        image: $image,
        descrition: $descrition
      };
      $cart.push($newelement);
      $name = $('<input/>').attr('type', 'hidden').attr('class', 'item').val($(this).find('.title').text());
      $amount = $('<input/>').attr('type', 'hidden').attr('class', 'amount').val($amt);
      $quantity = $('<input/>').attr('type', 'hidden').attr('class', 'quantity').val($nb);
      $shipping = $('<input/>').attr('type', 'hidden').attr('class', 'shipping').val($ship);
      _form.find('.business').after($name.attr('name', 'item_name_' + ($id + 1)));
      _form.find('.business').after($amount.attr('name', 'amount_' + ($id + 1)));
      _form.find('.business').after($quantity.attr('name', 'quantity_' + ($id + 1)));
      _form.find('.business').after($shipping.attr('name', 'shipping_' + ($id + 1)));
      return $id += 1;
    });
    Cookies.set('cart', $cart);
    $total = $total_price + parseInt($('.postal .value').text());
    $total_price_all_items = $('<input/>').attr('type', 'hidden').attr('name', 'PAYMENTREQUEST_0_ITEMAMT').attr('class', 'amount').val($total_price);
    $shipping = $('<input/>').attr('type', 'hidden').attr('name', 'PAYMENTREQUEST_0_SHIPPINGAMT').attr('class', 'quantity').val($('.postal .value').text());
    $amount = $('<input/>').attr('type', 'hidden').attr('name', 'PAYMENTREQUEST_0_AMT').attr('class', 'quantity').val($total);
    return _form.find('.shipping').val($('.postal .value').text());
  };

  cart.prototype.bindEvents = function() {
    var _container, _form, _updatebtnpaypal, _updatecart;
    _updatebtnpaypal = this.updatebtnpaypal;
    _updatecart = this.updatecart;
    _container = this.$container;
    _form = $('#formpaypal');
    this.etape1.on('click', function(e) {
      return _container.attr('data-etape', 'etape1');
    });
    this.etape2.on('click', function(e) {
      return _container.attr('data-etape', 'etape2');
    });
    this.addressinput.change(function(e) {
      var $ready, $val, $where;
      console.log('changed');
      $where = $(this).data('where');
      console.log('$where =' + $where);
      $val = $(this).val();
      console.log('$val  =' + $val);
      _form.find('.' + $where).val($val);
      $ready = true;
      console.log('fuck : ' + $('.required').length);
      $('.required').each(function() {
        console.log('?? required : ');
        if (!$(this).val()) {
          console.log('required pas rempli');
          $ready = false;
        }
      });
      console.log('ready : ' + $ready);
      if ($ready) {
        return _form.addClass('readytopay');
      }
    });
    return this.quantity.change(function(e) {
      var $newtotal, $newval, $row;
      $row = $(this).closest('.article');
      $newval = $(this).val();
      if ($newval > 0) {
        $newtotal = $(this).val() * parseInt($(this).closest('.row').find('.cost').text());
        $row.find('.subtotal').text($newtotal);
      } else {
        $row.remove();
      }
      _updatecart(_container);
      return _updatebtnpaypal(_container);
    });
  };

  return cart;

})();

module.cart = cart;
